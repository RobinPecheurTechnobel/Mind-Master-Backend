// <auto-generated />
using System;
using DAL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(MindMasterContext))]
    [Migration("20240102092018_Idea")]
    partial class Idea
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DAL.Entities.AssemblyEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("Assembly", "Idea");
                });

            modelBuilder.Entity("DAL.Entities.ConceptEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("Concept", "Idea");
                });

            modelBuilder.Entity("DAL.Entities.GroupEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Group", "User");
                });

            modelBuilder.Entity("DAL.Entities.GroupThinkerEntity", b =>
                {
                    b.Property<int>("ThinkerId")
                        .HasColumnType("int");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<bool>("isOwner")
                        .HasColumnType("bit");

                    b.HasKey("ThinkerId", "GroupId");

                    b.HasIndex("GroupId");

                    b.ToTable("GroupThinker", "User");
                });

            modelBuilder.Entity("DAL.Entities.IdeaEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Format")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ThinkerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("creationDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Idea", "Idea");
                });

            modelBuilder.Entity("DAL.Entities.LabelEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Label", "Idea");
                });

            modelBuilder.Entity("DAL.Entities.Relations.ConceptAssemblyEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AssemblyId")
                        .HasColumnType("int");

                    b.Property<int>("ConceptId")
                        .HasColumnType("int");

                    b.Property<long>("Order")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("ConceptAssemblies");
                });

            modelBuilder.Entity("DAL.Entities.Relations.ConceptGroupEntity", b =>
                {
                    b.Property<int>("ConceptId")
                        .HasColumnType("int");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.HasKey("ConceptId", "GroupId");

                    b.ToTable("ConceptGroup", "Idea");
                });

            modelBuilder.Entity("DAL.Entities.Relations.ConceptIdeaEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ConceptId")
                        .HasColumnType("int");

                    b.Property<int>("IdeaId")
                        .HasColumnType("int");

                    b.Property<long>("Order")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("ConceptIdea", "Idea");
                });

            modelBuilder.Entity("DAL.Entities.Relations.GroupAssemblyEntity", b =>
                {
                    b.Property<int>("AssemblyId")
                        .HasColumnType("int");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.HasKey("AssemblyId", "GroupId");

                    b.ToTable("GroupAssembly", "Idea");
                });

            modelBuilder.Entity("DAL.Entities.Relations.LabelAssemblyEntity", b =>
                {
                    b.Property<int>("LabelId")
                        .HasColumnType("int");

                    b.Property<int>("AssemblyId")
                        .HasColumnType("int");

                    b.HasKey("LabelId", "AssemblyId");

                    b.ToTable("LabelAssembly", "Idea");
                });

            modelBuilder.Entity("DAL.Entities.Relations.LabelConceptEntity", b =>
                {
                    b.Property<int>("LabelId")
                        .HasColumnType("int");

                    b.Property<int>("ConceptId")
                        .HasColumnType("int");

                    b.HasKey("LabelId", "ConceptId");

                    b.ToTable("LabelConcept", "Idea");
                });

            modelBuilder.Entity("DAL.Entities.ThinkerEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HashPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Pseudo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.ToTable("Thinker", "User");
                });

            modelBuilder.Entity("DAL.Entities.GroupThinkerEntity", b =>
                {
                    b.HasOne("DAL.Entities.GroupEntity", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Entities.ThinkerEntity", "Thinker")
                        .WithMany()
                        .HasForeignKey("ThinkerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("Thinker");
                });
#pragma warning restore 612, 618
        }
    }
}
